{"version":3,"file":"static/js/461.1a91ee03.chunk.js","mappings":"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","sources":["components/api/fetch.js","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '5742f4de3a7b600a36c23a592b6dd172';\n\nexport const fetchAsync = async () => {\n  const url = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\n\n  const { data } = await axios.get(url);\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const url = `${BASE_URL}/movie/${id}?api_key=${API_KEY}`;\n\n  const { data } = await axios.get(url);\n  return data;\n};\n\nexport const fetchByQuery = async (guery) => {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${guery}&page=1&include_adult=false`;\n  \n  const {data} = await axios.get(url);\n  return data;\n}\n\nexport const fetchCast = async id => {\n  const url = `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`;\n\n  const { data } = await axios.get(url);\n  return data;\n};\n\nexport const fetchReviews = async id => {\n  const url = `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`;\n\n  const { data } = await axios.get(url);\n  return data;\n};\n","import styled from \"styled-components\";\n\nexport const SearchContainer = styled.main`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const SearchInput = styled.input`\n  padding: 10px;\n  font-size: 16px;\n  border-radius: 5px;\n  border: 1px solid grey;\n  outline: none;\n  margin-right: 10px;\n`;\n\nexport const SearchButton = styled.button`\n  padding: 10px 20px;\n  background-color: #2196f3;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n\n  &:hover {\n    background-color: #0c7cd5;\n  }\n`;","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  SearchContainer,\n  SearchForm,\n  SearchInput,\n  SearchButton,\n} from './SearchBox.styled';\n\nconst SearchBox = ({ onSubmit }) => {\n  const [searchText, setSearchText] = useState('');\n\n  const formSubmit = e => {\n  e.preventDefault();\n  onSubmit(searchText);\n  setSearchText('');\n};\n\n  return (\n    <SearchContainer>\n      <SearchForm onSubmit={formSubmit}>\n        <SearchInput\n          value={searchText}\n          onChange={event => setSearchText(event.target.value)}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n        />\n        <SearchButton type=\"submit\">Search</SearchButton>\n      </SearchForm>\n    </SearchContainer>\n  );\n};\n\nexport default SearchBox;\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 20px;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  margin-bottom: 10px;\n  \n`;\n\nexport const MovieLink = styled(Link)`\n  display: block;\n  text-decoration: none;\n  color: #000;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, ListItem, MovieLink } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <main>\n      <List>\n        {movies.map(movie => {\n          return (\n            <ListItem key={movie.id}>\n              <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </MovieLink>\n            </ListItem>\n          );\n        })}\n      </List>\n    </main>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchByQuery } from 'components/api/fetch';\nimport SearchBox from 'components/SearchBox/SearchBox';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { Wrapper } from './Movies.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [responseMovies, setResponseMovies] = useState([]);\n\n  const query = searchParams.get('name');\n\n  useEffect(() => {\n    const handleFetchMoviesByQuery = async () => {\n      try {\n        const { results } = await fetchByQuery(query);\n        setResponseMovies(results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    if (query) {\n      handleFetchMoviesByQuery(query);\n    }\n  }, [query]);\n\n  const handleSearchSubmit = value => {\n    const nextParams = value !== '' ? { name: value.trim() } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <Wrapper>\n      <SearchBox onSubmit={handleSearchSubmit} />\n      <MoviesList movies={responseMovies} />\n    </Wrapper>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","fetchAsync","url","axios","data","fetchMovieById","id","fetchByQuery","guery","fetchCast","fetchReviews","SearchContainer","styled","SearchForm","SearchInput","SearchButton","onSubmit","useState","searchText","setSearchText","e","preventDefault","value","onChange","event","target","type","autoComplete","autoFocus","List","ListItem","MovieLink","Link","movies","location","useLocation","map","movie","to","state","from","title","Wrapper","useSearchParams","searchParams","setSearchParams","responseMovies","setResponseMovies","query","get","useEffect","handleFetchMoviesByQuery","results","console","log","nextParams","name","trim"],"sourceRoot":""}