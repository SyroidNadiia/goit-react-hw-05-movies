{"version":3,"file":"static/js/180.cb4c3707.chunk.js","mappings":"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","sources":["components/api/fetch.js","pages/MovieDetails/MovieDetails.styled.js","components/GoBackButton/GoBackButton.styled.js","components/GoBackButton/GoBackButton.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '5742f4de3a7b600a36c23a592b6dd172';\n\nexport const fetchAsync = async () => {\n  const url = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\n\n  const { data } = await axios.get(url);\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const url = `${BASE_URL}/movie/${id}?api_key=${API_KEY}`;\n\n  const { data } = await axios.get(url);\n  return data;\n};\n\nexport const fetchByQuery = async (guery) => {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${guery}&page=1&include_adult=false`;\n  \n  const {data} = await axios.get(url);\n  return data;\n}\n\nexport const fetchCast = async id => {\n  const url = `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`;\n\n  const { data } = await axios.get(url);\n  return data;\n};\n\nexport const fetchReviews = async id => {\n  const url = `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`;\n\n  const { data } = await axios.get(url);\n  return data;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Main = styled.main`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n`;\n\nexport const ContainerTitle = styled.div`\n  display: flex;\n  gap: 5px;\n  margin-bottom: 10px;\n`;\n\nexport const BackLink = styled(Link)`\n  margin-bottom: 10px;\n  color: #0070f3;\n  text-decoration: none;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 200px;\n  height: 300px;\n  object-fit: cover;\n  margin: 0 20px 0 0;\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n`;\n\nexport const Title = styled.h2`\n  font-size: 20px;\n  margin-bottom: 10px;\n`;\n\nexport const ReleaseDate = styled.p`\n  margin-bottom: 5px;\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nexport const Score = styled.p`\n  margin-bottom: 20px;\n`;\n\nexport const Overview = styled.p`\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Genres = styled.ul`\n  margin-bottom: 10px;\n  list-style: none;\n`;\nexport const Label = styled.span`\n  font-weight: bold;\n  margin-bottom: 10px;\n`;\n\nexport const GenresList = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const GenreItem = styled.li`\n  margin-bottom: 10px;\n`;\n\nexport const AdditionalInfo = styled.div`\n  margin: 20px 0 10px 0;\n`;\n\nexport const SubMenu = styled.ul`\n  list-style: none;\n  display: flex;\n  margin: 10px 0 10px 0;\n`;\n\nexport const SubMenuItem = styled.li`\n  margin-right: 10px;\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const StyledLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  font-size: 20px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledLink } from './GoBackButton.styled';\n\n\nconst GoBackBtn = ({ to, children }) => {\n  return <StyledLink to={to}>{children}</StyledLink>;\n};\n\n\nexport default GoBackBtn;\n\nGoBackBtn.propTypes = {\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  children: PropTypes.node.isRequired,\n};","import {  useParams, NavLink, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense, useRef } from 'react';\nimport { fetchMovieById } from 'components/api/fetch';\nimport { IoIosArrowRoundBack } from 'react-icons/io';\nimport { IconContext } from 'react-icons';\nimport {\n  Main,\n  ContainerTitle,\n  Image,\n  Info,\n  Container,\n  Title,\n  ReleaseDate,\n  Score,\n  Overview,\n  Genres,\n  GenreItem,\n  AdditionalInfo,\n  SubMenu,\n  SubMenuItem,\n  Label,\n  GenresList,\n} from './MovieDetails.styled';\nimport Loader from 'components/Loader/Loader';\nimport GoBackBtn from 'components/GoBackButton/GoBackButton';\n\nconst MovieDetails = () => {\n  const [dataMovie, setDataMovie] = useState({});\n\n  const {\n    current: { movieId },\n  } = useRef(useParams('movieId'));\n\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n\n  useEffect(() => {\n    const handelFetchMoviesById = async () => {\n      try {\n        const response = await fetchMovieById(movieId);\n        setDataMovie(response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    handelFetchMoviesById();\n  }, [movieId]);\n\n  const {\n    poster_path,\n    original_title,\n    title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = dataMovie;\n\n  const defaultImage = 'https://via.placeholder.com/200x300?text=No+Image';\n\n  return (\n    <Main>\n      <IconContext.Provider value={{ size: '25px' }}>\n        <GoBackBtn to={backLink.current}>\n          {<IoIosArrowRoundBack />}Go back\n        </GoBackBtn>\n      </IconContext.Provider>\n      <Container>\n        <Image\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/original${poster_path}`\n              : defaultImage\n          }\n          width=\"200\"\n          height=\"300\"\n          alt={original_title}\n        />\n\n        <Info>\n          <ContainerTitle>\n            <Title>{title}</Title>\n            <ReleaseDate>\n              {release_date && `(${release_date.substring(0, 4)})`}\n            </ReleaseDate>\n          </ContainerTitle>\n          <Score>User Score: {Math.round(vote_average * 10)}%</Score>\n          <Overview>\n            <Label>Overview</Label> {overview}\n          </Overview>\n          {genres && (\n            <Genres>\n              <Label>Genres:</Label>\n              <GenresList>\n                {genres.map(genre => {\n                  return <GenreItem key={genre.id}>{genre.name}</GenreItem>;\n                })}\n              </GenresList>\n            </Genres>\n          )}\n        </Info>\n      </Container>\n      <AdditionalInfo>\n        <h3>Additional information</h3>\n        <SubMenu>\n          <SubMenuItem>\n            <NavLink to={`/movies/${movieId}/cast`}>Cast</NavLink>\n          </SubMenuItem>\n          <SubMenuItem>\n            <NavLink to={`/movies/${movieId}/reviews`}>Reviews</NavLink>\n          </SubMenuItem>\n        </SubMenu>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </AdditionalInfo>\n    </Main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","fetchAsync","url","axios","data","fetchMovieById","id","fetchByQuery","guery","fetchCast","fetchReviews","Main","styled","ContainerTitle","Image","Link","Info","Container","Title","ReleaseDate","Score","Overview","Genres","Label","GenresList","GenreItem","AdditionalInfo","SubMenu","SubMenuItem","StyledLink","to","children","useState","dataMovie","setDataMovie","movieId","useRef","useParams","current","location","useLocation","backLink","state","from","useEffect","handelFetchMoviesById","response","console","log","poster_path","original_title","title","release_date","vote_average","overview","genres","value","size","src","width","height","alt","substring","Math","round","map","genre","name","Suspense","fallback","Loader"],"sourceRoot":""}